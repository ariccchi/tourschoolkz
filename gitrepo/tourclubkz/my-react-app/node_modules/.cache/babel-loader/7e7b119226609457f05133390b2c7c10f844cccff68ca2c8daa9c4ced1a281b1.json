{"ast":null,"code":"import React,{useEffect,useRef}from'react';import Chart from'chart.js/auto';import{jsx as _jsx}from\"react/jsx-runtime\";const LineChart=_ref=>{let{xValues,yValues,lineLabel,color}=_ref;const chartRef=useRef(null);const chartInstance=useRef(null);useEffect(()=>{if(chartInstance.current){chartInstance.current.destroy();}const ctx=chartRef.current.getContext('2d');chartInstance.current=new Chart(ctx,{type:\"line\",data:{labels:xValues,datasets:[{label:lineLabel,fill:false,lineTension:0,backgroundColor:color,borderColor:color,data:yValues}]},options:{responsive:true,scales:{y:{min:0,max:50}}}});return()=>{if(chartInstance.current){chartInstance.current.destroy();}};},[xValues,yValues]);return/*#__PURE__*/_jsx(\"canvas\",{className:\"staticregclass\",ref:chartRef});};export default LineChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsx","_jsx","LineChart","_ref","xValues","yValues","lineLabel","color","chartRef","chartInstance","current","destroy","ctx","getContext","type","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","options","responsive","scales","y","min","max","className","ref"],"sources":["/Applications/MAMP/htdocs/gitrepo/tourclubkz/my-react-app/src/linegraf.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst LineChart = ({ xValues, yValues, lineLabel, color }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    const ctx = chartRef.current.getContext('2d');\n    \n    chartInstance.current = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: xValues,\n        datasets: [{\n            label: lineLabel,\n          fill: false,\n          lineTension: 0,\n          backgroundColor: color,\n          borderColor: color,\n          data: yValues\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            min: 0,\n            max: 50\n          }\n        }\n      }\n    });\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [xValues, yValues]);\n\n  return (\n \n      <canvas className='staticregclass' ref={chartRef}  />\n\n  );\n};\n\nexport default LineChart;\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,KAAK,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,OAAO,CAAEC,OAAO,CAAEC,SAAS,CAAEC,KAAM,CAAC,CAAAJ,IAAA,CACvD,KAAM,CAAAK,QAAQ,CAAGV,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAW,aAAa,CAAGX,MAAM,CAAC,IAAI,CAAC,CAElCD,SAAS,CAAC,IAAM,CACd,GAAIY,aAAa,CAACC,OAAO,CAAE,CACzBD,aAAa,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CACjC,CAEA,KAAM,CAAAC,GAAG,CAAGJ,QAAQ,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC,CAE7CJ,aAAa,CAACC,OAAO,CAAG,GAAI,CAAAX,KAAK,CAACa,GAAG,CAAE,CACrCE,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,CACJC,MAAM,CAAEZ,OAAO,CACfa,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAEZ,SAAS,CAClBa,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,CAAC,CACdC,eAAe,CAAEd,KAAK,CACtBe,WAAW,CAAEf,KAAK,CAClBQ,IAAI,CAAEV,OACR,CAAC,CACH,CAAC,CACDkB,OAAO,CAAE,CACPC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,EACP,CACF,CACF,CACF,CAAC,CAAC,CAEF,MAAO,IAAM,CACX,GAAInB,aAAa,CAACC,OAAO,CAAE,CACzBD,aAAa,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CACjC,CACF,CAAC,CACH,CAAC,CAAE,CAACP,OAAO,CAAEC,OAAO,CAAC,CAAC,CAEtB,mBAEIJ,IAAA,WAAQ4B,SAAS,CAAC,gBAAgB,CAACC,GAAG,CAAEtB,QAAS,CAAG,CAAC,CAG3D,CAAC,CAED,cAAe,CAAAN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}