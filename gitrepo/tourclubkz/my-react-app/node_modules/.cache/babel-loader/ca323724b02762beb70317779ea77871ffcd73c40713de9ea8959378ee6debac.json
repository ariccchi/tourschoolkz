{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/PrivateRoute.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [isBlocked, setIsBlocked] = useState(false);\n  const token = localStorage.getItem('token');\n  const decodedToken = jwtDecode(token);\n  const id = decodedToken.sub;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkUserStatus = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}tourschoolphp/checkUserStatus.php`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: id\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.status === 'blocked') {\n          setIsBlocked(true);\n          localStorage.removeItem('token'); // Удаляем токен из LocalStorage\n          window.location.reload();\n          navigate('/'); // Перенаправляем на главную страницу\n        }\n      } catch (error) {\n        console.error('An error occurred while checking user status:', error);\n      }\n    };\n    if (token) {\n      checkUserStatus(); // Проверяем статус пользователя при загрузке компонента\n    } else {\n      navigate('/'); // Если нет токена, перенаправляем на главную страницу\n    }\n  }, [token, navigate]);\n  return isBlocked ? null : children;\n};\n_s(PrivateRoute, \"zVfTsIL8GXo+liyvGtpOAi0AT9w=\", false, function () {\n  return [useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","PrivateRoute","children","_s","isBlocked","setIsBlocked","token","localStorage","getItem","decodedToken","id","sub","navigate","checkUserStatus","response","fetch","BASE_URL","method","headers","body","JSON","stringify","ok","Error","status","data","json","removeItem","window","location","reload","error","console","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/tourclubkz/my-react-app/src/PrivateRoute.js"],"sourcesContent":["// src/components/PrivateRoute.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst PrivateRoute = ({ children }) => {\n  const [isBlocked, setIsBlocked] = useState(false);\n  const token = localStorage.getItem('token');\n    \n    const decodedToken = jwtDecode(token);\n    const id = decodedToken.sub;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkUserStatus = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}tourschoolphp/checkUserStatus.php`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({id:id}),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        if (data.status === 'blocked') {\n          setIsBlocked(true);\n      \n          localStorage.removeItem('token'); // Удаляем токен из LocalStorage\n          window.location.reload();\n          navigate('/'); // Перенаправляем на главную страницу\n        }\n      } catch (error) {\n        console.error('An error occurred while checking user status:', error);\n      }\n    };\n\n    if (token) {\n      checkUserStatus(); // Проверяем статус пользователя при загрузке компонента\n    } else {\n      navigate('/'); // Если нет токена, перенаправляем на главную страницу\n    }\n  }, [token, navigate]);\n\n  return isBlocked ? null : children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEzC,MAAMC,YAAY,GAAGT,SAAS,CAACM,KAAK,CAAC;EACrC,MAAMI,EAAE,GAAGD,YAAY,CAACE,GAAG;EAC7B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,QAAS,mCAAkC,EAAE;UAC3EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAACX,EAAE,EAACA;UAAE,CAAC;QAC9B,CAAC,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACD,MAAM,KAAK,SAAS,EAAE;UAC7BnB,YAAY,CAAC,IAAI,CAAC;UAElBE,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;UAClCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UACxBlB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF,CAAC;IAED,IAAIzB,KAAK,EAAE;MACTO,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACN,KAAK,EAAEM,QAAQ,CAAC,CAAC;EAErB,OAAOR,SAAS,GAAG,IAAI,GAAGF,QAAQ;AACpC,CAAC;AAACC,EAAA,CA5CIF,YAAY;EAAA,QAMCF,WAAW;AAAA;AAAAkC,EAAA,GANxBhC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}