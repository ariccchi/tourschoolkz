{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/tourclubkz/my-react-app/src/messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './message.css';\nimport Navpanmini from './navpanmini';\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListStudents = () => {\n  _s();\n  var _messages$selectedStu;\n  const [students, setStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState({}); // Изменено на объект\n  const [unreadMessages, setUnreadMessages] = useState({});\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [senderId, setSenderId] = useState(null);\n  const [showRightChats, setShowRightChats] = useState(true);\n  const [fullscreenChat, setFullscreenChat] = useState(false);\n  const [attachedFile, setAttachedFile] = useState(null);\n  const [showUserModal, setShowUserModal] = useState(false);\n  // Добавьте следующее в начале компонента\n  const [imageLoading, setImageLoading] = useState(true);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  let prevDate = null;\n  const [forwardpic, setForwardpic] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const handleToggleRightChats = () => {\n    setShowRightChats(!showRightChats);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const decodedToken = jwtDecode(token);\n        const id = decodedToken.sub;\n        setSenderId(id);\n        const role = decodedToken.role;\n        let response;\n        if (role === 'curator') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/usercurlist.php`, {\n            title: id\n          });\n        } else if (role === 'student') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/studentMessages.php`, {\n            title: id\n          });\n        } else if (role === 'admin') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/adminleslist.php`, {\n            title: id\n          });\n        }\n        const data = response.data;\n        if (Array.isArray(data)) {\n          setStudents(data);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 1000); // обновление каждую секунду\n\n    return () => clearInterval(interval); // Очистка интервала при размонтировании компонента\n  }, []);\n  const chatMessagesRef = useRef();\n  useEffect(() => {\n    const handleScroll = () => {\n      const container = chatMessagesRef.current;\n      if (container) {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n        if (isAtBottom) {\n          setScrollPosition(container.scrollTop);\n        }\n      }\n    };\n    const chatContainer = chatMessagesRef.current;\n    if (chatContainer) {\n      chatContainer.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (chatContainer) {\n        chatContainer.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [chatMessagesRef.current]);\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      const container = chatMessagesRef.current;\n      const handleScroll = () => {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n        if (isAtBottom) {\n          setShouldScrollToBottom(true);\n        } else {\n          setShouldScrollToBottom(false);\n        }\n      };\n      container.addEventListener('scroll', handleScroll);\n      return () => {\n        container.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [chatMessagesRef.current]);\n  useEffect(() => {\n    if (shouldScrollToBottom && chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, shouldScrollToBottom]);\n  const handleStudentsClick = student => {\n    if (student.id === 'selectAll') {\n      handleSelectAll();\n    } else {\n      const isSelected = selectedStudents.some(selectedStudent => selectedStudent.id === student.id);\n      if (isSelected) {\n        // Remove the student from the selectedStudents array\n        setSelectedStudents(prevSelectedStudents => prevSelectedStudents.filter(selectedStudent => selectedStudent.id !== student.id));\n      } else {\n        // Add the student to the selectedStudents array\n        setSelectedStudents(prevSelectedStudents => [...prevSelectedStudents, student]);\n      }\n    }\n  };\n  const markMessagesAsRead = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(`${BASE_URL}tourschoolphp/markMessagesAsRead.php`, JSON.stringify({\n        receiver_user_id: receiverId,\n        sender_user_id: senderId\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.data.success) {\n        console.error('Error marking messages as read:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedStudent) {\n      getMessages(selectedStudent.id, senderId);\n    }\n  }, [selectedStudent, senderId]);\n  const handleStudentClick = async student => {\n    setSelectedStudent(student);\n    setFullscreenChat(true);\n    setShowRightChats(false);\n    setShowRightChats(showRightChats);\n    setShowRightChats(!showRightChats);\n    try {\n      setSelectedStudent(student);\n      const token = localStorage.getItem('token');\n      const decodedToken = jwtDecode(token);\n      const senderId = decodedToken.sub;\n      if (senderId !== student.id) {\n        await markMessagesAsRead(student.id, senderId);\n      }\n      getMessages(student.id, senderId);\n      ReadMess(student.id, senderId);\n    } catch (error) {\n      console.error('Error handling student click:', error);\n    }\n  };\n  const getMessages = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(`${BASE_URL}tourschoolphp/getMessages.php`, JSON.stringify({\n        receiver_user_id: receiverId,\n        sender_user_id: senderId\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const messagesArray = Array.from(response.data);\n      setMessages(prev => ({\n        ...prev,\n        [receiverId]: messagesArray\n      }));\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const ReadMess = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(`${BASE_URL}tourschoolphp/readmessages.php`, JSON.stringify({\n        receiver_user_id: receiverId,\n        sender_user_id: senderId\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const handleFileChange = files => {\n    const file = files[0];\n    if (file) {\n      const fileSizeInMB = file.size / (1024 * 1024);\n      const maxSizeInMB = 5;\n      if (fileSizeInMB > maxSizeInMB) {\n        alert(\"Файл слишком большой. Пожалуйста, выберите файл размером до 5 МБ.\");\n      } else {\n        setAttachedFile(file);\n      }\n    }\n  };\n  const handleForwClick = fileName => {\n    setShowUserModal(true);\n    console.log('Forwarding file:', fileName);\n    setForwardpic(fileName);\n  };\n\n  // console.log(messages);\n  const handleSendMessage = async () => {\n    const read = 0;\n\n    // Check if both message and attached file are present\n    if (!selectedStudent || !selectedStudent.id || !message && !attachedFile) {\n      console.error('Error: Missing student ID, message, or attached file');\n      // You can display an error message or handle it in another way\n      return;\n    }\n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_id', selectedStudent.id);\n    formData.append('message_text', message);\n    formData.append('is_read', read);\n    formData.append('file', attachedFile);\n    try {\n      const response = await axios.post(`${BASE_URL}tourschoolphp/sendMessage.php`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n    // Если \"Выбрать всех\" включено, выберите всех студентов, в противном случае сбросьте выбор\n    if (!selectAll) {\n      setSelectedStudents([...students]);\n    } else {\n      setSelectedStudents([]);\n    }\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatMessageDate = createdAt => {\n    const date = new Date(createdAt);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedHours = hours < 10 ? '0' + hours : hours;\n    const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n    return `${formattedHours}:${formattedMinutes}`;\n  };\n  const formatMessageDateMonth = createdAt => {\n    const months = [\"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"];\n    const date = new Date(createdAt);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const formattedDay = day < 10 ? '0' + day : day;\n    const formattedMonth = months[month];\n    return `${formattedDay} ${formattedMonth}`;\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && e.shiftKey) {\n      e.preventDefault();\n      setMessage(prevMessage => prevMessage + '\\n');\n    }\n  };\n  const [maxCharacters, setMaxCharacters] = useState(100);\n  useEffect(() => {\n    const handleResize = () => {\n      const screenWidth = window.innerWidth;\n      if (screenWidth <= 600) {\n        setMaxCharacters(50);\n      } else if (screenWidth <= 1024) {\n        setMaxCharacters(75);\n      } else {\n        setMaxCharacters(100);\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const formatMessageText = text => {\n    if (text === null) {\n      return '';\n    }\n    if (text.length > maxCharacters) {\n      const chunks = [];\n      let currentChunk = '';\n      for (let i = 0; i < text.length; i++) {\n        currentChunk += text[i];\n        if ((i + 1) % maxCharacters === 0 || i === text.length - 1) {\n          chunks.push(currentChunk);\n          currentChunk = '';\n        }\n      }\n      return chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [index > 0 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), chunk]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this));\n    }\n    return text.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index > 0 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 23\n      }, this), line]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this));\n  };\n  const handleSendButtonClick = async () => {\n    console.log('Sending messages to selected students:', selectedStudents, showUserModal, forwardpic);\n    const read = 0;\n    const selectedUserIds = selectedStudents.map(user => user.id);\n    console.log('Selected Students:', selectedStudents, senderId, selectedUserIds, read, forwardpic);\n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_ids', JSON.stringify(selectedUserIds)); // Use JSON.stringify to convert array to string\n    formData.append('is_read', read);\n    formData.append('file', forwardpic);\n    try {\n      const response = await axios.post(`${BASE_URL}tourschoolphp/forwardmessage.php`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setShowUserModal(false);\n  };\n  const sortedStudents = students.slice().sort((a, b) => {\n    // Если у студента `a` нет последнего сообщения или его message_id равен null, то он остается на своем месте\n    if (!a.last_message || !a.last_message.message_id) {\n      if (!b.last_message || !b.last_message.message_id) return 0;\n      // Возвращаем 1, чтобы `a` остался на своем месте\n      return 1;\n    }\n    // Если у студента `b` нет последнего сообщения или его message_id равен null, то он считается меньшим и идет выше в списке\n    if (!b.last_message || !b.last_message.message_id) return -1;\n    // Возвращаем разницу между message_id, как в предыдущем коде\n    return b.last_message.message_id - a.last_message.message_id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"couratorjs\",\n    children: [/*#__PURE__*/_jsxDEV(Navpanmini, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"hamburgerchat\",\n      onClick: handleToggleRightChats,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./hamburger.svg\",\n        alt: \"Toggle Right Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `rightchats ${showRightChats ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rightchats-container ${selectedStudent ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chath\",\n          children: \"\\u0427\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatinfousers\",\n          children: sortedStudents.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `student-item ${selectedStudent === student ? 'selected' : ''}`,\n            onClick: () => handleStudentClick(student),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatarka\",\n              children: student.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"avamessages\",\n                src: `http://localhost:8888/tourschoolphp/${student.avatar}`,\n                alt: `${student.name} ${student.surname}'s Avatar`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"studlastmess\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-name\",\n                children: [student.name, '   ', student.surname, student.unread_messages > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-dot\",\n                  children: student.unread_messages\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-lastmess\",\n                children: student.last_message && student.last_message.message_text && student.last_message.message_text.length > 20 ? `${student.last_message.message_text.slice(0, 20)}...` : student.last_message && student.last_message.message_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 9\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `leftchat ${fullscreenChat ? 'fullscreen' : ''}`,\n      children: selectedStudent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal2\",\n        onClick: () => selectedStudent.id && ReadMess(selectedStudent.id, senderId),\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/profile/${selectedStudent.id}`,\n          className: \"topnamestud\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roundavatarka\",\n            children: selectedStudent.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avamessages\",\n              src: `http://localhost:8888/tourschoolphp/${selectedStudent.avatar}`,\n              alt: `${selectedStudent.name} ${selectedStudent.surname}'s Avatar`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedStudent.name, \" \", selectedStudent.surname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          ref: chatMessagesRef,\n          children: (_messages$selectedStu = messages[selectedStudent.id]) === null || _messages$selectedStu === void 0 ? void 0 : _messages$selectedStu.map((message, index) => {\n            const currentDate = formatMessageDateMonth(message.created_at);\n            const showDate = prevDate !== currentDate; // Проверяем, отличается ли текущая дата от предыдущей\n\n            // Если текущая дата отличается от предыдущей, сохраняем текущую дату\n            if (showDate) {\n              prevDate = currentDate;\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.sender_user_id === senderId ? 'outgoing_msg' : 'incoming_msg',\n              children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-date\",\n                children: currentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg\",\n                children: (message.message_text || message.file_name) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: message.sender_user_id === senderId ? 'outgoing-text' : 'incoming-text',\n                  children: [formatMessageText(message.message_text), message.file_name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `file-container ${message.sender_user_id === senderId ? 'outgoing-file' : 'incoming-file'}`,\n                    children: message.file_name.includes('.jpg') || message.file_name.includes('.jpeg') || message.file_name.includes('.png') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"picturemess\",\n                        src: `http://localhost:8888/tourschoolphp/${message.file_name}`,\n                        alt: \"Attached Image\",\n                        onError: e => e.target.src = 'path/to/placeholder.jpg' // Optional placeholder\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"forw\",\n                        src: \"./forward.svg\",\n                        alt: \"Forward Icon\",\n                        onClick: () => handleForwClick(message.file_name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 573,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true) :\n                    /*#__PURE__*/\n                    /* Handle non-image files */\n                    _jsxDEV(\"a\", {\n                      className: \"ahrew\",\n                      href: `http://localhost:8888/tourschoolphp/${message.file_name}`,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          lineHeight: '60px'\n                        },\n                        children: message.file_name.slice(4)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-date\",\n                    children: formatMessageDate(message.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 5\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 12\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alltextandyellow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yellowbuttonchat2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./clip.svg\",\n                alt: \"Attach File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"fileInput\",\n              type: \"file\",\n              accept: \".pdf, .doc, .docx, .jpg, .jpeg, .png\",\n              onChange: e => handleFileChange(e.target.files),\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), attachedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attached-file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: attachedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"- \", attachedFile.size, \" bytes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"inin\",\n              value: message,\n              placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n              onChange: e => setMessage(e.target.value),\n              onKeyDown: handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"yellowbuttonchat\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./sendmessage.svg\",\n                onClick: handleSendMessage,\n                alt: \"Send Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), showUserModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rightchats2 ${showRightChats ? 'show' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowUserModal(false),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stuсdent-item ${selectAll ? 'selected' : ''}`,\n            onClick: () => handleStudentsClick({\n              id: 'selectAll'\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `student-name2 ${selectAll ? 'selected-name' : ''}`,\n              children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\\u0445\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `rightchats-container ${selectedStudents.length > 0 ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatinfousers\",\n              children: students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `student-item ${selectedStudents.some(selectedStudent => selectedStudent.id === student.id) ? 'selected' : ''}`,\n                onClick: () => handleStudentsClick(student),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `avatarka ${selectedStudents.some(selectedStudent => selectedStudent.id === student.id) ? 'selected-avatar' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `student-name ${selectedStudents.some(selectedStudent => selectedStudent.id === student.id) ? 'selected-name' : ''}`,\n                  children: [student.name, \" \", student.surname, unreadMessages[student.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"notification-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 50\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 17\n                }, this)]\n              }, student.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 11\n            }, this), selectedStudents.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send-button\",\n              onClick: handleSendButtonClick,\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n};\n_s(ListStudents, \"sGKdThlhsxNTxy4MNovgPFFUhYU=\");\n_c = ListStudents;\nexport default ListStudents;\nvar _c;\n$RefreshReg$(_c, \"ListStudents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jwtDecode","Navpanmini","BrowserRouter","Router","Switch","Route","Link","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","ListStudents","_s","_messages$selectedStu","students","setStudents","selectedStudent","setSelectedStudent","message","setMessage","messages","setMessages","unreadMessages","setUnreadMessages","scrollPosition","setScrollPosition","shouldScrollToBottom","setShouldScrollToBottom","senderId","setSenderId","showRightChats","setShowRightChats","fullscreenChat","setFullscreenChat","attachedFile","setAttachedFile","showUserModal","setShowUserModal","imageLoading","setImageLoading","selectedStudents","setSelectedStudents","prevDate","forwardpic","setForwardpic","selectAll","setSelectAll","handleToggleRightChats","fetchData","token","localStorage","getItem","decodedToken","id","sub","role","response","post","BASE_URL","title","data","Array","isArray","console","error","interval","setInterval","clearInterval","chatMessagesRef","handleScroll","container","current","isAtBottom","scrollHeight","scrollTop","clientHeight","chatContainer","addEventListener","removeEventListener","handleStudentsClick","student","handleSelectAll","isSelected","some","prevSelectedStudents","filter","markMessagesAsRead","receiverId","JSON","stringify","receiver_user_id","sender_user_id","headers","success","getMessages","handleStudentClick","ReadMess","messagesArray","from","prev","handleFileChange","files","file","fileSizeInMB","size","maxSizeInMB","alert","handleForwClick","fileName","log","handleSendMessage","read","formData","FormData","append","closeModal","handleKeyDown","e","key","shiftKey","preventDefault","formatMessageDate","createdAt","date","Date","hours","getHours","minutes","getMinutes","formattedHours","formattedMinutes","formatMessageDateMonth","months","day","getDate","month","getMonth","formattedDay","formattedMonth","handleKeyPress","prevMessage","maxCharacters","setMaxCharacters","handleResize","screenWidth","window","innerWidth","formatMessageText","text","length","chunks","currentChunk","i","push","map","chunk","index","children","_jsxFileName","lineNumber","columnNumber","split","line","handleSendButtonClick","selectedUserIds","user","sortedStudents","slice","sort","a","b","last_message","message_id","className","onClick","src","alt","avatar","name","surname","unread_messages","message_text","href","ref","currentDate","created_at","showDate","file_name","includes","onError","target","rel","style","lineHeight","htmlFor","type","accept","onChange","display","value","placeholder","onKeyDown","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/tourclubkz/my-react-app/src/messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './message.css';\nimport Navpanmini from './navpanmini';\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from 'react-router-dom';\nconst ListStudents = () => {\n  const [students, setStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState({}); // Изменено на объект\n  const [unreadMessages, setUnreadMessages] = useState({});\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [senderId, setSenderId] = useState(null);\n  const [showRightChats, setShowRightChats] = useState(true);\n  const [fullscreenChat, setFullscreenChat] = useState(false);\n  const [attachedFile, setAttachedFile] = useState(null);\n  const [showUserModal, setShowUserModal] = useState(false);\n// Добавьте следующее в начале компонента\nconst [imageLoading, setImageLoading] = useState(true);\nconst [selectedStudents, setSelectedStudents] = useState([]);\n  let prevDate = null;\nconst [forwardpic, setForwardpic] = useState([]);\nconst [selectAll, setSelectAll] = useState(false);\n  const handleToggleRightChats = () => {\n    setShowRightChats(!showRightChats);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const decodedToken = jwtDecode(token);\n        const id = decodedToken.sub;\n  \n        setSenderId(id);\n        const role = decodedToken.role;\n        let response;\n\n        if (role === 'curator') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/usercurlist.php`, {\n            title: id\n          });\n        } else if (role === 'student') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/studentMessages.php`, {\n            title: id\n          });\n        } else if (role === 'admin') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/adminleslist.php`, {\n            title: id\n          });\n        }\n  \n        const data = response.data;\n        if (Array.isArray(data)) {\n          setStudents(data);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n  \n    fetchData();\n\n    const interval = setInterval(() => {\n      fetchData();\n    }, 1000); // обновление каждую секунду\n  \n    return () => clearInterval(interval); // Очистка интервала при размонтировании компонента\n  }, []);\n  \n\n\n\n\n \n\n  const chatMessagesRef = useRef();\n  useEffect(() => {\n    const handleScroll = () => {\n      const container = chatMessagesRef.current;\n      if (container) {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n    \n        if (isAtBottom) {\n          setScrollPosition(container.scrollTop);\n        }\n      }\n    };\n  \n    const chatContainer = chatMessagesRef.current;\n    if (chatContainer) {\n      chatContainer.addEventListener('scroll', handleScroll);\n    }\n  \n    return () => {\n      if (chatContainer) {\n        chatContainer.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [chatMessagesRef.current]);\n  \n  \n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      const container = chatMessagesRef.current;\n  \n      const handleScroll = () => {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n        if (isAtBottom) {\n          setShouldScrollToBottom(true);\n        } else {\n          setShouldScrollToBottom(false);\n        }\n      };\n  \n      container.addEventListener('scroll', handleScroll);\n  \n      return () => {\n        container.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [chatMessagesRef.current]);\n  \n  useEffect(() => {\n    if (shouldScrollToBottom && chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, shouldScrollToBottom]);\n\n \n  const handleStudentsClick = (student) => {\n    if (student.id === 'selectAll') {\n      handleSelectAll();\n    } else {\n    \n      const isSelected = selectedStudents.some((selectedStudent) => selectedStudent.id === student.id);\n  \n      if (isSelected) {\n        // Remove the student from the selectedStudents array\n        setSelectedStudents((prevSelectedStudents) =>\n          prevSelectedStudents.filter((selectedStudent) => selectedStudent.id !== student.id)\n        );\n      } else {\n        // Add the student to the selectedStudents array\n        setSelectedStudents((prevSelectedStudents) => [...prevSelectedStudents, student]);\n      }\n    }\n  };\n  \n\n\n  const markMessagesAsRead = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/markMessagesAsRead.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n\n      if (!response.data.success) {\n        console.error('Error marking messages as read:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedStudent) {\n      getMessages(selectedStudent.id, senderId);\n    }\n  }, [selectedStudent, senderId]);\n\n  const handleStudentClick = async (student) => {\n    setSelectedStudent(student);\n    setFullscreenChat(true);\n    setShowRightChats(false);\n    setShowRightChats(showRightChats);\n    setShowRightChats(!showRightChats);\n\n    try {\n      setSelectedStudent(student);\n      const token = localStorage.getItem('token');\n      const decodedToken = jwtDecode(token);\n      const senderId = decodedToken.sub;\n  \n      if (senderId !== student.id) {\n        await markMessagesAsRead(student.id, senderId);\n      }\n  \n      getMessages(student.id, senderId);\n      ReadMess(student.id, senderId)\n    } catch (error) {\n      console.error('Error handling student click:', error);\n    }\n  };\n  \n  \n  \n\n  const getMessages = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/getMessages.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n  \n      const messagesArray = Array.from(response.data);\n      setMessages((prev) => ({\n        ...prev,\n        [receiverId]: messagesArray\n      }));\n  \n   \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n\n  const ReadMess = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/readmessages.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );  \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n\n  const handleFileChange = (files) => {\n    const file = files[0];\n    \n    if (file) {\n\n      const fileSizeInMB = file.size / (1024 * 1024); \n      const maxSizeInMB = 5; \n      \n      if (fileSizeInMB > maxSizeInMB) {\n        alert(\"Файл слишком большой. Пожалуйста, выберите файл размером до 5 МБ.\");\n      } else {\n        setAttachedFile(file);\n      }\n    }\n  };\n  \n  const handleForwClick = (fileName) => {\n    setShowUserModal(true);\n    console.log('Forwarding file:', fileName);\n    setForwardpic(fileName)\n  };\n  \n  // console.log(messages);\n  const handleSendMessage = async () => {\n    const read = 0;\n\n    // Check if both message and attached file are present\n    if (!selectedStudent || !selectedStudent.id || (!message && !attachedFile)) {\n      console.error('Error: Missing student ID, message, or attached file');\n      // You can display an error message or handle it in another way\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_id', selectedStudent.id);\n    formData.append('message_text', message);\n    formData.append('is_read', read);\n    formData.append('file', attachedFile);\n  \n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/sendMessage.php`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n  \n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n    // Если \"Выбрать всех\" включено, выберите всех студентов, в противном случае сбросьте выбор\n    if (!selectAll) {\n      setSelectedStudents([...students]);\n    } else {\n      setSelectedStudents([]);\n    }\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault(); \n      handleSendMessage();\n    }\n  };\n  const formatMessageDate = (createdAt) => {\n    const date = new Date(createdAt);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n  \n    const formattedHours = hours < 10 ? '0' + hours : hours;\n    const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n  \n    return `${formattedHours}:${formattedMinutes}`;\n  };\n\n  const formatMessageDateMonth = (createdAt) => {\n    const months = [\n        \"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\",\n        \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"\n    ];\n\n    const date = new Date(createdAt);\n    const day = date.getDate();\n    const month = date.getMonth();\n  \n    const formattedDay = day < 10 ? '0' + day : day;\n    const formattedMonth = months[month];\n  \n    return `${formattedDay} ${formattedMonth}`;\n};\n   \n\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && e.shiftKey) {\n      e.preventDefault();\n      setMessage((prevMessage) => prevMessage + '\\n');\n    }\n  };\n  const [maxCharacters, setMaxCharacters] = useState(100);  \n\n  useEffect(() => {\n   \n    const handleResize = () => {\n      const screenWidth = window.innerWidth;\n\n      if (screenWidth <= 600) {\n        setMaxCharacters(50);\n      } else if (screenWidth <= 1024) {\n        setMaxCharacters(75);\n      } else {\n        setMaxCharacters(100);\n      }\n    };\n\n    handleResize(); \n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); \n\n  const formatMessageText = (text) => {\n    if (text === null) {\n      return '';\n    }\n    if (text.length > maxCharacters) {\n      const chunks = [];\n      let currentChunk = '';\n\n      for (let i = 0; i < text.length; i++) {\n        currentChunk += text[i];\n\n        if ((i + 1) % maxCharacters === 0 || i === text.length - 1) {\n          chunks.push(currentChunk);\n          currentChunk = '';\n        }\n      }\n\n      return chunks.map((chunk, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <br />}\n          {chunk}\n        </React.Fragment>\n      ));\n    }\n\n\n    return text.split('\\n').map((line, index) => (\n      <React.Fragment key={index}>\n        {index > 0 && <br />}\n        {line}\n      </React.Fragment>\n    ));\n  };\n\n  const handleSendButtonClick = async () => {\n    console.log('Sending messages to selected students:', selectedStudents, showUserModal, forwardpic);\n    const read = 0;\n   \n\n    const selectedUserIds = selectedStudents.map(user => user.id);\n   console.log('Selected Students:', selectedStudents, senderId, selectedUserIds, read, forwardpic);\n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_ids', JSON.stringify(selectedUserIds)); // Use JSON.stringify to convert array to string\n    formData.append('is_read', read);\n    formData.append('file', forwardpic);\n  \n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/forwardmessage.php`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n  \n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setShowUserModal(false);\n  };\n\n\n\n  const sortedStudents = students.slice().sort((a, b) => {\n    // Если у студента `a` нет последнего сообщения или его message_id равен null, то он остается на своем месте\n    if (!a.last_message || !a.last_message.message_id) {\n\n        if (!b.last_message || !b.last_message.message_id) return 0;\n        // Возвращаем 1, чтобы `a` остался на своем месте\n        return 1;\n    }\n    // Если у студента `b` нет последнего сообщения или его message_id равен null, то он считается меньшим и идет выше в списке\n    if (!b.last_message || !b.last_message.message_id) return -1;\n    // Возвращаем разницу между message_id, как в предыдущем коде\n    return b.last_message.message_id - a.last_message.message_id;\n});\n\n  return (\n    <div className='couratorjs'>\n      <Navpanmini/>\n      <button className=\"hamburgerchat\" onClick={handleToggleRightChats}>\n        <img src=\"./hamburger.svg\" alt=\"Toggle Right Chats\" />\n      </button>\n      <div className={`rightchats ${showRightChats ? 'show' : ''}`}>\n        <div className={`rightchats-container ${selectedStudent ? 'selected' : ''}`}>\n          <div className='chath'>Чаты</div>\n          <div className='chatinfousers'>\n          {sortedStudents.map((student) => (\n    <div\n        key={student.id}\n        className={`student-item ${selectedStudent === student ? 'selected' : ''}`}\n        onClick={() => handleStudentClick(student)}\n    >\n        <div className='avatarka'>\n            {student.avatar && <img className='avamessages' src={`http://localhost:8888/tourschoolphp/${student.avatar}`} alt={`${student.name} ${student.surname}'s Avatar`} />}\n        </div>\n        <div className='studlastmess'>\n            <div className=\"student-name\">\n                {student.name}\n                {'   '}\n                {student.surname}\n                {student.unread_messages > 0 && (\n            <div className=\"notification-dot\">{student.unread_messages}</div>\n        )}\n            </div>\n            <div className=\"student-lastmess\">\n  {student.last_message && student.last_message.message_text && student.last_message.message_text.length > 20\n    ? `${student.last_message.message_text.slice(0, 20)}...`\n    : (student.last_message && student.last_message.message_text)\n  }\n</div>\n\n        </div>\n    </div>\n))}\n          </div>\n        </div>\n      </div>\n      <div className={`leftchat ${fullscreenChat ? 'fullscreen' : ''}`}>\n        {selectedStudent && (\n        <div className=\"modal2\" onClick={() => selectedStudent.id && ReadMess(selectedStudent.id, senderId)}>\n\n<a href={`/profile/${selectedStudent.id}`} className='topnamestud'>\n              <div className='roundavatarka'>\n              {selectedStudent.avatar && <img className='avamessages' src={`http://localhost:8888/tourschoolphp/${selectedStudent.avatar}`} alt={`${selectedStudent.name} ${selectedStudent.surname}'s Avatar`} />}\n      </div>\n              <h2>{selectedStudent.name} {selectedStudent.surname}</h2>\n            </a>\n            \n            <div className=\"chat-messages\" ref={chatMessagesRef}>\n      {messages[selectedStudent.id]?.map((message, index) => {\n        const currentDate = formatMessageDateMonth(message.created_at);\n        const showDate = prevDate !== currentDate; // Проверяем, отличается ли текущая дата от предыдущей\n\n        // Если текущая дата отличается от предыдущей, сохраняем текущую дату\n        if (showDate) {\n          prevDate = currentDate;\n        }\n\n        return (\n          <div key={index} className={message.sender_user_id === senderId ? 'outgoing_msg' : 'incoming_msg'}>\n            {showDate && (\n              <div className=\"message-date\">\n                {currentDate}\n              </div>\n            )}\n           <div className=\"msg\">\n\n{(message.message_text || message.file_name) && (\n  <div className={message.sender_user_id === senderId ? 'outgoing-text' : 'incoming-text'}>\n    {formatMessageText(message.message_text)}\n    {message.file_name && (\n      <div className={`file-container ${message.sender_user_id === senderId ? 'outgoing-file' : 'incoming-file'}`}>\n        {message.file_name.includes('.jpg') || message.file_name.includes('.jpeg') || message.file_name.includes('.png') ? (\n          <>\n            {/* Render image with alt text and optional placeholder */}\n            <img\n              className='picturemess'\n              src={`http://localhost:8888/tourschoolphp/${message.file_name}`}\n              alt=\"Attached Image\"\n              onError={(e) => e.target.src = 'path/to/placeholder.jpg'} // Optional placeholder\n            />\n            <img className='forw' src=\"./forward.svg\" alt=\"Forward Icon\" onClick={() => handleForwClick(message.file_name)} />\n          </>\n        ) : (\n          /* Handle non-image files */\n          <a\n            className='ahrew'\n            href={`http://localhost:8888/tourschoolphp/${message.file_name}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span style={{ lineHeight: '60px' }}>{message.file_name.slice(4)}</span>\n          </a>\n        )}\n      </div>\n    )}\n \n \n    <span className=\"message-date\">\n      {formatMessageDate(message.created_at)}\n    </span>\n  </div>\n)}\n</div>\n          </div>\n        );\n      })}\n    </div>\n     \n            <div className='alltextandyellow'>\n              <div className='yellowbuttonchat2'>\n                <label htmlFor=\"fileInput\">\n                  <img src=\"./clip.svg\" alt=\"Attach File\" />\n                </label>\n                <input\n                  id=\"fileInput\"\n                  type=\"file\"\n                  accept=\".pdf, .doc, .docx, .jpg, .jpeg, .png\"\n                  onChange={(e) => handleFileChange(e.target.files)}\n                  style={{ display: 'none' }}\n                />\n              </div>\n  \n              {attachedFile && (\n                <div className=\"attached-file-info\">\n                  <span>{attachedFile.name}</span>\n                  <span>- {attachedFile.size} bytes</span>\n                </div>\n              )}\n  \n              <div className=\"chat-input\">\n                <textarea\n                  className=\"inin\"\n                  value={message}\n                  placeholder=\"Сообщение\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                />\n                <div className='yellowbuttonchat'>\n                <img src=\"./sendmessage.svg\" onClick={handleSendMessage} alt=\"Send Message\" />\n\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n   \n  \n\n   \n      {showUserModal && (\n  <div className=\"modal-overlay4\">\n    <div className=\"modal4\">\n      <div className={`rightchats2 ${showRightChats ? 'show' : ''}`}>\n        <button onClick={() => setShowUserModal(false)}>Отменить</button>\n        <div\n          className={`stuсdent-item ${selectAll ? 'selected' : ''}`}\n          onClick={() => handleStudentsClick({ id: 'selectAll' })}\n        >\n          <div className={`student-name2 ${selectAll ? 'selected-name' : ''}`}>\n            Выбрать всех\n          </div>\n        </div>\n\n        <div className={`rightchats-container ${selectedStudents.length > 0 ? 'selected' : ''}`}>\n          <div className='chatinfousers'>\n            {/* Остальные студенты */}\n            {students.map((student) => (\n              <div\n                key={student.id}\n                className={`student-item ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected' : ''}`}\n                onClick={() => handleStudentsClick(student)}\n              >\n                <div className={`avatarka ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected-avatar' : ''}`}></div>\n                <div className={`student-name ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected-name' : ''}`}>\n                  {student.name} {student.surname}\n                  {unreadMessages[student.id] && <div className=\"notification-dot\"></div>}\n                </div>\n              </div>\n            ))}\n          </div>\n          {selectedStudents.length > 0 && (\n            <button className=\"send-button\" onClick={handleSendButtonClick}>\n              Отправить\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n\n    </div>\n\n    \n  );\n  \n};\n\nexport default ListStudents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}