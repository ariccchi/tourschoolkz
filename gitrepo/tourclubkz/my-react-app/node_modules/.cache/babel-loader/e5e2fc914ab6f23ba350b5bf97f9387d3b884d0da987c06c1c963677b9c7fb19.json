{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link,useLocation}from\"react-router-dom\";import'./navpanmini.css';import Logoutmini from\"./logoutmini\";import{jwtDecode}from'jwt-decode';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Navpan(){const[activeIcon,setActiveIcon]=useState(\"\");const location=useLocation();const[isOpen,setIsOpen]=useState(false);const[token,setToken]=useState('');const[knopka,setKnopka]=useState(true);const toggleNav=()=>{setIsOpen(!isOpen);};useEffect(()=>{const currentPath=location.pathname;const pathParts=currentPath.split('/');const mainPath=pathParts[1];// Получаем первую часть пути\nswitch(mainPath){case\"profile\":setActiveIcon(\"profile\");break;case\"courses\":setActiveIcon(\"vector\");break;case\"messages\":setActiveIcon(\"message\");break;default:setActiveIcon(\"\");}},[location]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleNav,className:\"hamburgermini\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/hamburger.svg\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"navpanmini \".concat(isOpen?\"\":\"hidden\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"logomini\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logosmall\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mainiconmini\"}),/*#__PURE__*/_jsx(Link,{to:\"/profile\",children:/*#__PURE__*/_jsx(\"img\",{src:activeIcon===\"profile\"?\"/profileyellow.svg\":\"/profile.svg\",alt:\"logo\",className:\"mainiconmini\",onClick:()=>setActiveIcon(\"profile\")})}),/*#__PURE__*/_jsx(Link,{to:\"/courses\",children:/*#__PURE__*/_jsx(\"img\",{src:activeIcon===\"vector\"?\"/bookyellow.svg\":\"/book.svg\",alt:\"logo\",className:\"mainiconmini\",onClick:()=>setActiveIcon(\"vector\")})}),/*#__PURE__*/_jsx(Link,{to:\"/messages\",children:/*#__PURE__*/_jsx(\"img\",{src:activeIcon===\"message\"?\"/messageyellow.svg\":\"/messages.svg\",alt:\"logo\",className:\"mainiconmini\",onClick:()=>setActiveIcon(\"message\")})}),/*#__PURE__*/_jsx(\"img\",{src:activeIcon===\"plane\"?\"/planeyellow.svg\":\"/plane.svg\",alt:\"logo\",className:\"mainiconmini\",onClick:()=>setActiveIcon(\"plane\")}),/*#__PURE__*/_jsx(Logoutmini,{})]})})]});}export default Navpan;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","Logoutmini","jwtDecode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Navpan","activeIcon","setActiveIcon","location","isOpen","setIsOpen","token","setToken","knopka","setKnopka","toggleNav","currentPath","pathname","pathParts","split","mainPath","children","onClick","className","src","concat","to","alt"],"sources":["/Applications/MAMP/htdocs/gitrepo/tourclubkz/my-react-app/src/navpanmini.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport './navpanmini.css';\nimport Logoutmini from \"./logoutmini\";\nimport { jwtDecode } from 'jwt-decode';\nfunction Navpan() {\n    const [activeIcon, setActiveIcon] = useState(\"\");\n    const location = useLocation();\n    const [isOpen, setIsOpen] = useState(false);\n    const [token, setToken] = useState(''); \n    const [knopka, setKnopka] = useState(true);\n    const toggleNav = () => {\n        setIsOpen(!isOpen);\n    };\n  \n    useEffect(() => {\n\n        const currentPath = location.pathname;\n    \n        const pathParts = currentPath.split('/');\n    \n        const mainPath = pathParts[1]; // Получаем первую часть пути\n    \n    \n        switch (mainPath) {\n    \n            case \"profile\":\n    \n                setActiveIcon(\"profile\");\n    \n                break;\n    \n            case \"courses\":\n    \n                setActiveIcon(\"vector\");\n    \n                break;\n    \n            case \"messages\":\n    \n                setActiveIcon(\"message\");\n    \n                break;\n    \n            default:\n    \n                setActiveIcon(\"\");\n    \n        }\n    \n    }, [location]);\n\n    return (\n        <>\n            <button onClick={toggleNav} className=\"hamburgermini\">\n                <img src=\"/hamburger.svg\"></img>\n            </button>               \n            <div className={`navpanmini ${isOpen ? \"\" : \"hidden\"}`}>\n                <div className=\"logomini\">\n                    <div className=\"logosmall\"></div>\n                    <div className=\"mainiconmini\"></div>\n                    <Link to=\"/profile\">\n                        <img src={activeIcon === \"profile\" ? \"/profileyellow.svg\" : \"/profile.svg\"} alt=\"logo\" className=\"mainiconmini\" onClick={() => setActiveIcon(\"profile\")}></img>\n                    </Link>\n                    <Link to=\"/courses\">\n                        <img src={activeIcon === \"vector\" ? \"/bookyellow.svg\" : \"/book.svg\"} alt=\"logo\" className=\"mainiconmini\" onClick={() => setActiveIcon(\"vector\")}></img>\n                    </Link>\n                    <Link to=\"/messages\">\n                        <img src={activeIcon === \"message\" ? \"/messageyellow.svg\" : \"/messages.svg\"} alt=\"logo\" className=\"mainiconmini\" onClick={() => setActiveIcon(\"message\")}></img>\n                    </Link>\n                    <img src={activeIcon === \"plane\" ? \"/planeyellow.svg\" : \"/plane.svg\"} alt=\"logo\" className=\"mainiconmini\" onClick={() => setActiveIcon(\"plane\")}></img>\n                    <Logoutmini />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Navpan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}