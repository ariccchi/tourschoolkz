{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst Loginjwtcheck = ({\n  children\n}) => {\n  _s();\n  const token = localStorage.getItem('token');\n  let decodedToken, id;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (token) {\n      navigate('/profile'); // Если нет токена, перенаправляем на /login\n    } else {\n      navigate('/login');\n    }\n  }, [token]);\n};\n_s(Loginjwtcheck, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Loginjwtcheck;\nexport default Loginjwtcheck;\nvar _c;\n$RefreshReg$(_c, \"Loginjwtcheck\");","map":{"version":3,"names":["React","useEffect","useNavigate","jwtDecode","Loginjwtcheck","children","_s","token","localStorage","getItem","decodedToken","id","navigate","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/gitrepo/tourclubkz/my-react-app/src/loginjwtcheck.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst Loginjwtcheck = ({ children }) => {\n  const token = localStorage.getItem('token');\n  let decodedToken, id;\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (token) {\n      navigate('/profile'); // Если нет токена, перенаправляем на /login\n    }else{ \n            navigate('/login');\n    }\n  }, [token]);\n\n};\n\nexport default Loginjwtcheck;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIC,YAAY,EAAEC,EAAE;EAEpB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,EAAE;MACTK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC,MAAI;MACGA,QAAQ,CAAC,QAAQ,CAAC;IAC1B;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;AAEb,CAAC;AAACD,EAAA,CAdIF,aAAa;EAAA,QAIAF,WAAW;AAAA;AAAAW,EAAA,GAJxBT,aAAa;AAgBnB,eAAeA,aAAa;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}