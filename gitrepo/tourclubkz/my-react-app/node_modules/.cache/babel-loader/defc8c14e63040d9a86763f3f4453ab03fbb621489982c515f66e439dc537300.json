{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import{jwtDecode}from'jwt-decode';import'./message.css';import Navpanmini from'./navpanmini';import{BASE_URL}from'./config';import{BrowserRouter as Router,Switch,Route,Link,Routes}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ListStudents=()=>{var _messages$selectedStu;const prevScrollHeightRef=useRef(0);const[students,setStudents]=useState([]);const[selectedStudent,setSelectedStudent]=useState(null);const[message,setMessage]=useState('');const[messages,setMessages]=useState({});// Изменено на объект\nconst[unreadMessages,setUnreadMessages]=useState({});const[scrollPosition,setScrollPosition]=useState(0);const[shouldScrollToBottom,setShouldScrollToBottom]=useState(true);const[senderId,setSenderId]=useState(null);const[showRightChats,setShowRightChats]=useState(true);const[fullscreenChat,setFullscreenChat]=useState(false);const[attachedFile,setAttachedFile]=useState(null);const[showUserModal,setShowUserModal]=useState(false);// Добавьте следующее в начале компонента\nconst[imageLoading,setImageLoading]=useState(true);const[selectedStudents,setSelectedStudents]=useState([]);const[scrollRatio,setScrollRatio]=useState(0);const[messagesCont,setMessagesCont]=useState(30);const prevScrollTopRef=useRef(0);let prevDate=null;const[forwardpic,setForwardpic]=useState([]);const[selectAll,setSelectAll]=useState(false);const[prevScrollHeight,setPrevScrollHeight]=useState(0);const prevScrollRatioRef=useRef(0);const handleToggleRightChats=()=>{setShowRightChats(!showRightChats);};const messagesContRef=useRef(messagesCont);useEffect(()=>{const fetchData=async()=>{try{const token=localStorage.getItem('token');const decodedToken=jwtDecode(token);const id=decodedToken.sub;setSenderId(id);const role=decodedToken.role;let response;if(role==='curator'){response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/usercurlist.php\"),{title:id});}else if(role==='student'){response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/studentMessages.php\"),{title:id});}else if(role==='admin'){response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/adminleslist.php\"),{title:id});}const data=response.data;if(Array.isArray(data)){setStudents(data);}else{console.error('Data is not an array:',data);}}catch(error){console.error('Error fetching students:',error);}};fetchData();const interval=setInterval(()=>{fetchData();},1000);// обновление каждую секунду\nreturn()=>clearInterval(interval);// Очистка интервала при размонтировании компонента\n},[]);const chatMessagesRef=useRef();useEffect(()=>{const handleScroll=()=>{const container=chatMessagesRef.current;if(container){const isAtBottom=container.scrollHeight-container.scrollTop<=container.clientHeight+50;const isAtTop=container.scrollTop===0;// Добавлено условие для верхней части скролла\nif(isAtBottom){setScrollPosition(container.scrollTop);}if(isAtTop){setMessagesCont(prevMessagesCont=>{const newMessagesCont=prevMessagesCont+30;getMessages(selectedStudent.id,senderId,newMessagesCont);return newMessagesCont;});}}};const chatContainer=chatMessagesRef.current;if(chatContainer){chatContainer.addEventListener('scroll',handleScroll);}return()=>{if(chatContainer){chatContainer.removeEventListener('scroll',handleScroll);}};},[chatMessagesRef.current]);useEffect(()=>{if(chatMessagesRef.current){const container=chatMessagesRef.current;const handleScroll=()=>{const isAtBottom=container.scrollHeight-container.scrollTop<=container.clientHeight+50;if(isAtBottom){setShouldScrollToBottom(true);}else{setShouldScrollToBottom(false);}};container.addEventListener('scroll',handleScroll);return()=>{container.removeEventListener('scroll',handleScroll);};}},[chatMessagesRef.current]);useEffect(()=>{if(selectedStudent){getMessages(selectedStudent.id,senderId,messagesCont);}},[selectedStudent,messagesCont]);// Add messagesCont to the dependency array\nuseEffect(()=>{if(shouldScrollToBottom&&chatMessagesRef.current){chatMessagesRef.current.scrollTop=chatMessagesRef.current.scrollHeight;}},[messages,shouldScrollToBottom]);const handleStudentsClick=student=>{if(student.id==='selectAll'){handleSelectAll();}else{const isSelected=selectedStudents.some(selectedStudent=>selectedStudent.id===student.id);if(isSelected){// Remove the student from the selectedStudents array\nsetSelectedStudents(prevSelectedStudents=>prevSelectedStudents.filter(selectedStudent=>selectedStudent.id!==student.id));}else{// Add the student to the selectedStudents array\nsetSelectedStudents(prevSelectedStudents=>[...prevSelectedStudents,student]);}}};const markMessagesAsRead=async(receiverId,senderId)=>{try{const response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/markMessagesAsRead.php\"),JSON.stringify({receiver_user_id:receiverId,sender_user_id:senderId}),{headers:{'Content-Type':'application/json'}});if(!response.data.success){console.error('Error marking messages as read:',response.data.error);}}catch(error){console.error('Error marking messages as read:',error);}};useEffect(()=>{if(selectedStudent){const interval=setInterval(()=>{getMessages(selectedStudent.id,senderId,messagesCont);},1000);return()=>clearInterval(interval);}},[selectedStudent]);useEffect(()=>{if(chatMessagesRef.current){prevScrollHeightRef.current=chatMessagesRef.current.scrollHeight;}},[messages]);if(chatMessagesRef.current){const currentScrollTop=chatMessagesRef.current.scrollTop;}useEffect(()=>{// Восстанавливаем положение скролла после обновления сообщений\nif(chatMessagesRef.current){chatMessagesRef.current.scrollTop=chatMessagesRef.current.scrollHeight-prevScrollHeightRef.current;}},[selectedStudent]);const handleStudentClick=async student=>{setSelectedStudent(student);setFullscreenChat(true);setShowRightChats(false);setShowRightChats(showRightChats);setShowRightChats(!showRightChats);try{setSelectedStudent(student);const token=localStorage.getItem('token');const decodedToken=jwtDecode(token);const senderId=decodedToken.sub;if(senderId!==student.id){await markMessagesAsRead(student.id,senderId);}getMessages(student.id,senderId,messagesCont);ReadMess(student.id,senderId);}catch(error){console.error('Error handling student click:',error);}};useEffect(()=>{messagesContRef.current=messagesCont;},[messagesCont]);const getMessages=async(receiverId,senderId,messagesCont)=>{try{const response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/getMessages.php\"),JSON.stringify({receiver_user_id:receiverId,sender_user_id:senderId,messagesCont:messagesContRef.current}),{headers:{'Content-Type':'application/json'}});const messagesArray=Array.from(response.data);setMessages(prev=>({...prev,[receiverId]:messagesArray}));}catch(error){console.error('Error fetching messages:',error);}};const ReadMess=async(receiverId,senderId)=>{try{const response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/readmessages.php\"),JSON.stringify({receiver_user_id:receiverId,sender_user_id:senderId}),{headers:{'Content-Type':'application/json'}});}catch(error){console.error('Error fetching messages:',error);}};const handleFileChange=files=>{const file=files[0];if(file){const fileSizeInMB=file.size/(1024*1024);const maxSizeInMB=5;if(fileSizeInMB>maxSizeInMB){alert(\"Файл слишком большой. Пожалуйста, выберите файл размером до 5 МБ.\");}else{setAttachedFile(file);}}};const handleForwClick=fileName=>{setShowUserModal(true);console.log('Forwarding file:',fileName);setForwardpic(fileName);};// console.log(messages);\nconst handleSendMessage=async()=>{const read=0;// Check if both message and attached file are present\nif(!selectedStudent||!selectedStudent.id||!message&&!attachedFile){console.error('Error: Missing student ID, message, or attached file');// You can display an error message or handle it in another way\nreturn;}const formData=new FormData();formData.append('sender_user_id',senderId);formData.append('receiver_user_id',selectedStudent.id);formData.append('message_text',message);formData.append('is_read',read);formData.append('file',attachedFile);try{const response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/sendMessage.php\"),formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.data.success){setMessage('');setAttachedFile(null);getMessages(selectedStudent.id,senderId,messagesCont);}else{console.error('Error sending message:',response.data.error);}}catch(error){console.error('Error sending message:',error);}};const handleSelectAll=()=>{setSelectAll(!selectAll);// Если \"Выбрать всех\" включено, выберите всех студентов, в противном случае сбросьте выбор\nif(!selectAll){setSelectedStudents([...students]);}else{setSelectedStudents([]);}};const closeModal=()=>{setSelectedStudent(null);};const handleKeyDown=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};const formatMessageDate=createdAt=>{const date=new Date(createdAt);const hours=date.getHours();const minutes=date.getMinutes();const formattedHours=hours<10?'0'+hours:hours;const formattedMinutes=minutes<10?'0'+minutes:minutes;return\"\".concat(formattedHours,\":\").concat(formattedMinutes);};const formatMessageDateMonth=createdAt=>{const months=[\"Января\",\"Февраля\",\"Марта\",\"Апреля\",\"Мая\",\"Июня\",\"Июля\",\"Августа\",\"Сентября\",\"Октября\",\"Ноября\",\"Декабря\"];const date=new Date(createdAt);const day=date.getDate();const month=date.getMonth();const formattedDay=day<10?'0'+day:day;const formattedMonth=months[month];return\"\".concat(formattedDay,\" \").concat(formattedMonth);};const handleKeyPress=e=>{if(e.key==='Enter'&&e.shiftKey){e.preventDefault();setMessage(prevMessage=>prevMessage+'\\n');}};const[maxCharacters,setMaxCharacters]=useState(100);useEffect(()=>{const handleResize=()=>{const screenWidth=window.innerWidth;if(screenWidth<=600){setMaxCharacters(50);}else if(screenWidth<=1024){setMaxCharacters(75);}else{setMaxCharacters(100);}};handleResize();window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);};},[]);const formatMessageText=text=>{if(text===null){return'';}if(text.length>maxCharacters){const chunks=[];let currentChunk='';for(let i=0;i<text.length;i++){currentChunk+=text[i];if((i+1)%maxCharacters===0||i===text.length-1){chunks.push(currentChunk);currentChunk='';}}return chunks.map((chunk,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[index>0&&/*#__PURE__*/_jsx(\"br\",{}),chunk]},index));}return text.split('\\n').map((line,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[index>0&&/*#__PURE__*/_jsx(\"br\",{}),line]},index));};useEffect(()=>{if(chatMessagesRef.current){setPrevScrollHeight(chatMessagesRef.current.scrollHeight);}},[messages]);useEffect(()=>{// Восстанавливаем положение скролла после обновления сообщений\nif(chatMessagesRef.current){const scrollDiff=chatMessagesRef.current.scrollHeight-prevScrollHeight;chatMessagesRef.current.scrollTop+=scrollDiff;}},[messages,prevScrollHeight]);const handleSendButtonClick=async()=>{console.log('Sending messages to selected students:',selectedStudents,showUserModal,forwardpic);const read=0;const selectedUserIds=selectedStudents.map(user=>user.id);console.log('Selected Students:',selectedStudents,senderId,selectedUserIds,read,forwardpic);const formData=new FormData();formData.append('sender_user_id',senderId);formData.append('receiver_user_ids',JSON.stringify(selectedUserIds));// Use JSON.stringify to convert array to string\nformData.append('is_read',read);formData.append('file',forwardpic);try{const response=await axios.post(\"\".concat(BASE_URL,\"tourschoolphp/forwardmessage.php\"),formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.data.success){setMessage('');setAttachedFile(null);getMessages(selectedStudent.id,senderId,messagesCont);}else{console.error('Error sending message:',response.data.error);}}catch(error){console.error('Error sending message:',error);}setShowUserModal(false);};const sortedStudents=students.slice().sort((a,b)=>{// Если у студента `a` нет последнего сообщения или его message_id равен null, то он остается на своем месте\nif(!a.last_message||!a.last_message.message_id){if(!b.last_message||!b.last_message.message_id)return 0;// Возвращаем 1, чтобы `a` остался на своем месте\nreturn 1;}// Если у студента `b` нет последнего сообщения или его message_id равен null, то он считается меньшим и идет выше в списке\nif(!b.last_message||!b.last_message.message_id)return-1;// Возвращаем разницу между message_id, как в предыдущем коде\nreturn b.last_message.message_id-a.last_message.message_id;});return/*#__PURE__*/_jsxs(\"div\",{className:\"couratorjs\",children:[/*#__PURE__*/_jsx(Navpanmini,{}),/*#__PURE__*/_jsx(\"button\",{className:\"hamburgerchat\",onClick:handleToggleRightChats,children:/*#__PURE__*/_jsx(\"img\",{src:\"./hamburger.svg\",alt:\"Toggle Right Chats\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"rightchats \".concat(showRightChats?'show':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"rightchats-container \".concat(selectedStudent?'selected':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"chath\",children:\"\\u0427\\u0430\\u0442\\u044B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatinfousers\",children:sortedStudents.map(student=>/*#__PURE__*/_jsxs(\"div\",{className:\"student-item \".concat(selectedStudent===student?'selected':''),onClick:()=>handleStudentClick(student),children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatarka\",children:student.avatar&&/*#__PURE__*/_jsx(\"img\",{className:\"avamessages\",src:\"\".concat(BASE_URL,\"tourschoolphp/\").concat(student.avatar),alt:\"\".concat(student.name,\" \").concat(student.surname,\"'s Avatar\")})}),/*#__PURE__*/_jsxs(\"div\",{className:\"studlastmess\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"student-name\",children:[student.name,'   ',student.surname,student.unread_messages>0&&/*#__PURE__*/_jsx(\"div\",{className:\"notification-dot\",children:student.unread_messages})]}),/*#__PURE__*/_jsx(\"div\",{className:\"student-lastmess\",children:student.last_message&&student.last_message.message_text&&student.last_message.message_text.length>20?\"\".concat(student.last_message.message_text.slice(0,20),\"...\"):student.last_message&&student.last_message.message_text})]})]},student.id))})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"leftchat \".concat(fullscreenChat?'fullscreen':''),children:selectedStudent&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal2\",onClick:()=>selectedStudent.id&&ReadMess(selectedStudent.id,senderId),children:[/*#__PURE__*/_jsxs(\"a\",{href:\"/profile/\".concat(selectedStudent.id),className:\"topnamestud\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"roundavatarka\",children:selectedStudent.avatar&&/*#__PURE__*/_jsx(\"img\",{className:\"avamessages\",src:\"\".concat(BASE_URL,\"tourschoolphp/\").concat(selectedStudent.avatar),alt:\"\".concat(selectedStudent.name,\" \").concat(selectedStudent.surname,\"'s Avatar\")})}),/*#__PURE__*/_jsxs(\"h2\",{children:[selectedStudent.name,\" \",selectedStudent.surname]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",ref:chatMessagesRef,children:(_messages$selectedStu=messages[selectedStudent.id])===null||_messages$selectedStu===void 0?void 0:_messages$selectedStu.map((message,index)=>{const currentDate=formatMessageDateMonth(message.created_at);const showDate=prevDate!==currentDate;// Проверяем, отличается ли текущая дата от предыдущей\n// Если текущая дата отличается от предыдущей, сохраняем текущую дату\nif(showDate){prevDate=currentDate;}return/*#__PURE__*/_jsxs(\"div\",{className:message.sender_user_id===senderId?'outgoing_msg':'incoming_msg',children:[showDate&&/*#__PURE__*/_jsx(\"div\",{className:\"message-date\",children:currentDate}),/*#__PURE__*/_jsx(\"div\",{className:\"msg\",children:(message.message_text||message.file_name)&&/*#__PURE__*/_jsxs(\"div\",{className:message.sender_user_id===senderId?'outgoing-text':'incoming-text',children:[formatMessageText(message.message_text),message.file_name&&/*#__PURE__*/_jsx(\"div\",{className:\"file-container \".concat(message.sender_user_id===senderId?'outgoing-file':'incoming-file'),children:message.file_name.includes('.jpg')||message.file_name.includes('.jpeg')||message.file_name.includes('.png')?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{className:\"picturemess\",src:\"\".concat(BASE_URL,\"tourschoolphp/\").concat(message.file_name),alt:\"Attached Image\",onError:e=>e.target.src='path/to/placeholder.jpg'// Optional placeholder\n}),/*#__PURE__*/_jsx(\"img\",{className:\"forw\",src:\"./forward.svg\",alt:\"Forward Icon\",onClick:()=>handleForwClick(message.file_name)})]}):/*#__PURE__*/ /* Handle non-image files */_jsx(\"a\",{className:\"ahrew\",href:\"\".concat(BASE_URL,\"tourschoolphp/\").concat(message.file_name),target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"span\",{style:{lineHeight:'60px'},children:message.file_name.slice(4)})})}),/*#__PURE__*/_jsx(\"span\",{className:\"message-date\",children:formatMessageDate(message.created_at)})]})})]},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"alltextandyellow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"yellowbuttonchat2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileInput\",children:/*#__PURE__*/_jsx(\"img\",{src:\"./clip.svg\",alt:\"Attach File\"})}),/*#__PURE__*/_jsx(\"input\",{id:\"fileInput\",type:\"file\",accept:\".pdf, .doc, .docx, .jpg, .jpeg, .png\",onChange:e=>handleFileChange(e.target.files),style:{display:'none'}})]}),attachedFile&&/*#__PURE__*/_jsxs(\"div\",{className:\"attached-file-info\",children:[/*#__PURE__*/_jsx(\"span\",{children:attachedFile.name}),/*#__PURE__*/_jsxs(\"span\",{children:[\"- \",attachedFile.size,\" bytes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"inin\",value:message,placeholder:\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",onChange:e=>setMessage(e.target.value),onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"div\",{className:\"yellowbuttonchat\",children:/*#__PURE__*/_jsx(\"img\",{src:\"./sendmessage.svg\",onClick:handleSendMessage,alt:\"Send Message\"})})]})]})]})}),showUserModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"rightchats2 \".concat(showRightChats?'show':''),children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowUserModal(false),children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stu\\u0441dent-item \".concat(selectAll?'selected':''),onClick:()=>handleStudentsClick({id:'selectAll'}),children:/*#__PURE__*/_jsx(\"div\",{className:\"student-name2 \".concat(selectAll?'selected-name':''),children:\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\\u0445\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightchats-container \".concat(selectedStudents.length>0?'selected':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatinfousers\",children:students.map(student=>/*#__PURE__*/_jsxs(\"div\",{className:\"student-item \".concat(selectedStudents.some(selectedStudent=>selectedStudent.id===student.id)?'selected':''),onClick:()=>handleStudentsClick(student),children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatarka \".concat(selectedStudents.some(selectedStudent=>selectedStudent.id===student.id)?'selected-avatar':'')}),/*#__PURE__*/_jsxs(\"div\",{className:\"student-name \".concat(selectedStudents.some(selectedStudent=>selectedStudent.id===student.id)?'selected-name':''),children:[student.name,\" \",student.surname,unreadMessages[student.id]&&/*#__PURE__*/_jsx(\"div\",{className:\"notification-dot\"})]})]},student.id))}),selectedStudents.length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSendButtonClick,children:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"})]})]})})})]});};export default ListStudents;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jwtDecode","Navpanmini","BASE_URL","BrowserRouter","Router","Switch","Route","Link","Routes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListStudents","_messages$selectedStu","prevScrollHeightRef","students","setStudents","selectedStudent","setSelectedStudent","message","setMessage","messages","setMessages","unreadMessages","setUnreadMessages","scrollPosition","setScrollPosition","shouldScrollToBottom","setShouldScrollToBottom","senderId","setSenderId","showRightChats","setShowRightChats","fullscreenChat","setFullscreenChat","attachedFile","setAttachedFile","showUserModal","setShowUserModal","imageLoading","setImageLoading","selectedStudents","setSelectedStudents","scrollRatio","setScrollRatio","messagesCont","setMessagesCont","prevScrollTopRef","prevDate","forwardpic","setForwardpic","selectAll","setSelectAll","prevScrollHeight","setPrevScrollHeight","prevScrollRatioRef","handleToggleRightChats","messagesContRef","fetchData","token","localStorage","getItem","decodedToken","id","sub","role","response","post","concat","title","data","Array","isArray","console","error","interval","setInterval","clearInterval","chatMessagesRef","handleScroll","container","current","isAtBottom","scrollHeight","scrollTop","clientHeight","isAtTop","prevMessagesCont","newMessagesCont","getMessages","chatContainer","addEventListener","removeEventListener","handleStudentsClick","student","handleSelectAll","isSelected","some","prevSelectedStudents","filter","markMessagesAsRead","receiverId","JSON","stringify","receiver_user_id","sender_user_id","headers","success","currentScrollTop","handleStudentClick","ReadMess","messagesArray","from","prev","handleFileChange","files","file","fileSizeInMB","size","maxSizeInMB","alert","handleForwClick","fileName","log","handleSendMessage","read","formData","FormData","append","closeModal","handleKeyDown","e","key","shiftKey","preventDefault","formatMessageDate","createdAt","date","Date","hours","getHours","minutes","getMinutes","formattedHours","formattedMinutes","formatMessageDateMonth","months","day","getDate","month","getMonth","formattedDay","formattedMonth","handleKeyPress","prevMessage","maxCharacters","setMaxCharacters","handleResize","screenWidth","window","innerWidth","formatMessageText","text","length","chunks","currentChunk","i","push","map","chunk","index","children","split","line","scrollDiff","handleSendButtonClick","selectedUserIds","user","sortedStudents","slice","sort","a","b","last_message","message_id","className","onClick","src","alt","avatar","name","surname","unread_messages","message_text","href","ref","currentDate","created_at","showDate","file_name","includes","onError","target","rel","style","lineHeight","htmlFor","type","accept","onChange","display","value","placeholder","onKeyDown"],"sources":["/Applications/MAMP/htdocs/gitrepo/tourclubkz/my-react-app/src/messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './message.css';\nimport Navpanmini from './navpanmini';\nimport { BASE_URL } from './config';\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from 'react-router-dom';\nconst ListStudents = () => {\n  const prevScrollHeightRef = useRef(0);\n  const [students, setStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState({}); // Изменено на объект\n  const [unreadMessages, setUnreadMessages] = useState({});\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [senderId, setSenderId] = useState(null);\n  const [showRightChats, setShowRightChats] = useState(true);\n  const [fullscreenChat, setFullscreenChat] = useState(false);\n  const [attachedFile, setAttachedFile] = useState(null);\n  const [showUserModal, setShowUserModal] = useState(false);\n// Добавьте следующее в начале компонента\nconst [imageLoading, setImageLoading] = useState(true);\nconst [selectedStudents, setSelectedStudents] = useState([]);\n\nconst [scrollRatio, setScrollRatio] = useState(0);\nconst [messagesCont, setMessagesCont] = useState(30);\nconst prevScrollTopRef = useRef(0);\n  let prevDate = null;\nconst [forwardpic, setForwardpic] = useState([]);\nconst [selectAll, setSelectAll] = useState(false);\n\nconst [prevScrollHeight, setPrevScrollHeight] = useState(0);\n\n\nconst prevScrollRatioRef = useRef(0);\n  const handleToggleRightChats = () => {\n    setShowRightChats(!showRightChats);\n  };\n  const messagesContRef = useRef(messagesCont);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const decodedToken = jwtDecode(token);\n        const id = decodedToken.sub;\n  \n        setSenderId(id);\n        const role = decodedToken.role;\n        let response;\n\n        if (role === 'curator') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/usercurlist.php`, {\n            title: id\n          });\n        } else if (role === 'student') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/studentMessages.php`, {\n            title: id\n          });\n        } else if (role === 'admin') {\n          response = await axios.post(`${BASE_URL}tourschoolphp/adminleslist.php`, {\n            title: id\n          });\n        }\n  \n        const data = response.data;\n        if (Array.isArray(data)) {\n          setStudents(data);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n  \n    fetchData();\n\n    const interval = setInterval(() => {\n      fetchData();\n  \n    }, 1000); // обновление каждую секунду\n  \n    return () => clearInterval(interval); // Очистка интервала при размонтировании компонента\n  }, []);\n  \n\n\n\n\n \n\n  const chatMessagesRef = useRef();\n  useEffect(() => {\n    const handleScroll = () => {\n      const container = chatMessagesRef.current;\n      if (container) {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n        const isAtTop = container.scrollTop === 0; // Добавлено условие для верхней части скролла\n   \n        if (isAtBottom) {\n          setScrollPosition(container.scrollTop);\n\n        }\n\n        if (isAtTop) {\n          setMessagesCont((prevMessagesCont) => {\n            const newMessagesCont = prevMessagesCont + 30;\n            getMessages(selectedStudent.id, senderId, newMessagesCont); \n            return newMessagesCont;\n          });\n        \n   \n        }\n      }\n    };\n\n\n    \n    const chatContainer = chatMessagesRef.current;\n    if (chatContainer) {\n      chatContainer.addEventListener('scroll', handleScroll);\n    }\n  \n    return () => {\n      if (chatContainer) {\n        chatContainer.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [chatMessagesRef.current]);\n  \n\n  \n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      const container = chatMessagesRef.current;\n  \n      const handleScroll = () => {\n        const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n        if (isAtBottom) {\n          setShouldScrollToBottom(true);\n        } else {\n          setShouldScrollToBottom(false);\n        }\n      };\n  \n      container.addEventListener('scroll', handleScroll);\n  \n      return () => {\n        container.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [chatMessagesRef.current]);\n  useEffect(() => {\n    if (selectedStudent) {             \n      getMessages(selectedStudent.id, senderId, messagesCont);\n    }\n  }, [selectedStudent, messagesCont]); // Add messagesCont to the dependency array\n\n  useEffect(() => {\n    if (shouldScrollToBottom && chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, shouldScrollToBottom]);\n\n \n  const handleStudentsClick = (student) => {\n    if (student.id === 'selectAll') {\n      handleSelectAll();\n    } else {\n    \n      const isSelected = selectedStudents.some((selectedStudent) => selectedStudent.id === student.id);\n  \n      if (isSelected) {\n        // Remove the student from the selectedStudents array\n        setSelectedStudents((prevSelectedStudents) =>\n          prevSelectedStudents.filter((selectedStudent) => selectedStudent.id !== student.id)\n        );\n      } else {\n        // Add the student to the selectedStudents array\n        setSelectedStudents((prevSelectedStudents) => [...prevSelectedStudents, student]);\n      }\n    }\n  };\n  \n\n\n  const markMessagesAsRead = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/markMessagesAsRead.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n\n      if (!response.data.success) {\n        console.error('Error marking messages as read:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedStudent) {\n      const interval = setInterval(() => {\n        getMessages(selectedStudent.id, senderId, messagesCont);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [selectedStudent]);\n  \n  useEffect(() => {\n\n    if (chatMessagesRef.current) {\n      prevScrollHeightRef.current = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  if (chatMessagesRef.current) {\n    const currentScrollTop = chatMessagesRef.current.scrollTop;\n\n\n  }\n  useEffect(() => {\n    // Восстанавливаем положение скролла после обновления сообщений\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight - prevScrollHeightRef.current;\n    }\n  }, [selectedStudent]);\n\n  const handleStudentClick = async (student) => {\n    setSelectedStudent(student);\n    setFullscreenChat(true);\n    setShowRightChats(false);\n    setShowRightChats(showRightChats);\n    setShowRightChats(!showRightChats);\n\n    try {\n      setSelectedStudent(student);\n      const token = localStorage.getItem('token');\n      const decodedToken = jwtDecode(token);\n      const senderId = decodedToken.sub;\n  \n      if (senderId !== student.id) {\n        await markMessagesAsRead(student.id, senderId);\n      }\n  \n      getMessages(student.id, senderId, messagesCont);\n      ReadMess(student.id, senderId)\n    } catch (error) {\n      console.error('Error handling student click:', error);\n    }\n  };\n  useEffect(() => {\n    messagesContRef.current = messagesCont;\n  }, [messagesCont]);\n\n  const getMessages = async (receiverId, senderId, messagesCont) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/getMessages.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId,\n          messagesCont: messagesContRef.current \n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n  \n      const messagesArray = Array.from(response.data);\n\n      setMessages((prev) => ({\n        ...prev,\n        [receiverId]: messagesArray\n      }));\n\n   \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n \n\n  const ReadMess = async (receiverId, senderId) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/readmessages.php`,\n        JSON.stringify({\n          receiver_user_id: receiverId,\n          sender_user_id: senderId\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );  \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n\n  const handleFileChange = (files) => {\n    const file = files[0];\n    \n    if (file) {\n\n      const fileSizeInMB = file.size / (1024 * 1024); \n      const maxSizeInMB = 5; \n      \n      if (fileSizeInMB > maxSizeInMB) {\n        alert(\"Файл слишком большой. Пожалуйста, выберите файл размером до 5 МБ.\");\n      } else {\n        setAttachedFile(file);\n      }\n    }\n  };\n  \n  const handleForwClick = (fileName) => {\n    setShowUserModal(true);\n    console.log('Forwarding file:', fileName);\n    setForwardpic(fileName)\n  };\n  \n  // console.log(messages);\n  const handleSendMessage = async () => {\n    const read = 0;\n\n    // Check if both message and attached file are present\n    if (!selectedStudent || !selectedStudent.id || (!message && !attachedFile)) {\n      console.error('Error: Missing student ID, message, or attached file');\n      // You can display an error message or handle it in another way\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_id', selectedStudent.id);\n    formData.append('message_text', message);\n    formData.append('is_read', read);\n    formData.append('file', attachedFile);\n  \n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/sendMessage.php`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n  \n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId, messagesCont);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n    // Если \"Выбрать всех\" включено, выберите всех студентов, в противном случае сбросьте выбор\n    if (!selectAll) {\n      setSelectedStudents([...students]);\n    } else {\n      setSelectedStudents([]);\n    }\n  };\n  \n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault(); \n      handleSendMessage();\n    }\n  };\n  const formatMessageDate = (createdAt) => {\n    const date = new Date(createdAt);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n  \n    const formattedHours = hours < 10 ? '0' + hours : hours;\n    const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n  \n    return `${formattedHours}:${formattedMinutes}`;\n  };\n\n  const formatMessageDateMonth = (createdAt) => {\n    const months = [\n        \"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\",\n        \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"\n    ];\n\n    const date = new Date(createdAt);\n    const day = date.getDate();\n    const month = date.getMonth();\n  \n    const formattedDay = day < 10 ? '0' + day : day;\n    const formattedMonth = months[month];\n  \n    return `${formattedDay} ${formattedMonth}`;\n};\n   \n\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && e.shiftKey) {\n      e.preventDefault();\n      setMessage((prevMessage) => prevMessage + '\\n');\n    }\n  };\n  const [maxCharacters, setMaxCharacters] = useState(100);  \n  useEffect(() => {\n   \n    const handleResize = () => {\n      const screenWidth = window.innerWidth;\n\n      if (screenWidth <= 600) {\n        setMaxCharacters(50);\n      } else if (screenWidth <= 1024) {\n        setMaxCharacters(75);\n      } else {\n        setMaxCharacters(100);\n      }\n    };\n\n    handleResize(); \n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); \n\n  const formatMessageText = (text) => {\n    if (text === null) {\n      return '';\n    }\n    if (text.length > maxCharacters) {\n      const chunks = [];\n      let currentChunk = '';\n\n      for (let i = 0; i < text.length; i++) {\n        currentChunk += text[i];\n\n        if ((i + 1) % maxCharacters === 0 || i === text.length - 1) {\n          chunks.push(currentChunk);\n          currentChunk = '';\n        }\n      }\n\n      return chunks.map((chunk, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <br />}\n          {chunk}\n        </React.Fragment>\n      ));\n    }\n\n\n    return text.split('\\n').map((line, index) => (\n      <React.Fragment key={index}>\n        {index > 0 && <br />}\n        {line}\n      </React.Fragment>\n    ));\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      setPrevScrollHeight(chatMessagesRef.current.scrollHeight);\n    }\n  }, [messages]);\n  useEffect(() => {\n    // Восстанавливаем положение скролла после обновления сообщений\n    if (chatMessagesRef.current) {\n      const scrollDiff = chatMessagesRef.current.scrollHeight - prevScrollHeight;\n      chatMessagesRef.current.scrollTop += scrollDiff;\n    }\n  }, [messages, prevScrollHeight]);\n\n\n  const handleSendButtonClick = async () => {\n    console.log('Sending messages to selected students:', selectedStudents, showUserModal, forwardpic);\n    const read = 0;\n   \n\n    const selectedUserIds = selectedStudents.map(user => user.id);\n   console.log('Selected Students:', selectedStudents, senderId, selectedUserIds, read, forwardpic);\n    const formData = new FormData();\n    formData.append('sender_user_id', senderId);\n    formData.append('receiver_user_ids', JSON.stringify(selectedUserIds)); // Use JSON.stringify to convert array to string\n    formData.append('is_read', read);\n    formData.append('file', forwardpic);\n  \n    try {\n      const response = await axios.post(\n        `${BASE_URL}tourschoolphp/forwardmessage.php`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n  \n      if (response.data.success) {\n        setMessage('');\n        setAttachedFile(null);\n        getMessages(selectedStudent.id, senderId, messagesCont);\n      } else {\n        console.error('Error sending message:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setShowUserModal(false);\n  };\n\n\n  const sortedStudents = students.slice().sort((a, b) => {\n    // Если у студента `a` нет последнего сообщения или его message_id равен null, то он остается на своем месте\n    if (!a.last_message || !a.last_message.message_id) {\n\n        if (!b.last_message || !b.last_message.message_id) return 0;\n        // Возвращаем 1, чтобы `a` остался на своем месте\n        return 1;\n    }\n    // Если у студента `b` нет последнего сообщения или его message_id равен null, то он считается меньшим и идет выше в списке\n    if (!b.last_message || !b.last_message.message_id) return -1;\n    // Возвращаем разницу между message_id, как в предыдущем коде\n    return b.last_message.message_id - a.last_message.message_id;\n});\n\n  return (\n    <div className='couratorjs'>\n      <Navpanmini/>\n      <button className=\"hamburgerchat\" onClick={handleToggleRightChats}>\n        <img src=\"./hamburger.svg\" alt=\"Toggle Right Chats\" />\n      </button>\n      <div className={`rightchats ${showRightChats ? 'show' : ''}`}>\n        <div className={`rightchats-container ${selectedStudent ? 'selected' : ''}`}>\n          <div className='chath'>Чаты</div>\n          <div className='chatinfousers'>\n          {sortedStudents.map((student) => (\n    <div\n        key={student.id}\n        className={`student-item ${selectedStudent === student ? 'selected' : ''}`}\n        onClick={() => handleStudentClick(student)}\n    >\n        <div className='avatarka'>\n            {student.avatar && <img className='avamessages' src={`${BASE_URL}tourschoolphp/${student.avatar}`} alt={`${student.name} ${student.surname}'s Avatar`} />}\n        </div>\n        <div className='studlastmess'>\n            <div className=\"student-name\">\n                {student.name}\n                {'   '}\n                {student.surname}\n                {student.unread_messages > 0 && (\n            <div className=\"notification-dot\">{student.unread_messages}</div>\n        )}\n            </div>\n            <div className=\"student-lastmess\">\n  {student.last_message && student.last_message.message_text && student.last_message.message_text.length > 20\n    ? `${student.last_message.message_text.slice(0, 20)}...`\n    : (student.last_message && student.last_message.message_text)\n  }\n</div>\n\n        </div>\n    </div>\n))}\n          </div>\n        </div>\n      </div>\n      <div className={`leftchat ${fullscreenChat ? 'fullscreen' : ''}`}>\n        {selectedStudent && (\n        <div className=\"modal2\" onClick={() => selectedStudent.id && ReadMess(selectedStudent.id, senderId)}>\n\n<a href={`/profile/${selectedStudent.id}`} className='topnamestud'>\n              <div className='roundavatarka'>\n              {selectedStudent.avatar && <img className='avamessages' src={`${BASE_URL}tourschoolphp/${selectedStudent.avatar}`} alt={`${selectedStudent.name} ${selectedStudent.surname}'s Avatar`} />}\n      </div>\n              <h2>{selectedStudent.name} {selectedStudent.surname}</h2>\n            </a>\n            \n            <div className=\"chat-messages\" ref={chatMessagesRef}>\n      {messages[selectedStudent.id]?.map((message, index) => {\n        const currentDate = formatMessageDateMonth(message.created_at);\n        const showDate = prevDate !== currentDate; // Проверяем, отличается ли текущая дата от предыдущей\n\n        // Если текущая дата отличается от предыдущей, сохраняем текущую дату\n        if (showDate) {\n          prevDate = currentDate;\n        }\n\n        return (\n          <div key={index} className={message.sender_user_id === senderId ? 'outgoing_msg' : 'incoming_msg'}>\n            {showDate && (\n              <div className=\"message-date\">\n                {currentDate}\n              </div>\n            )}\n           <div className=\"msg\">\n\n{(message.message_text || message.file_name) && (\n  <div className={message.sender_user_id === senderId ? 'outgoing-text' : 'incoming-text'}>\n    {formatMessageText(message.message_text)}\n    {message.file_name && (\n      <div className={`file-container ${message.sender_user_id === senderId ? 'outgoing-file' : 'incoming-file'}`}>\n        {message.file_name.includes('.jpg') || message.file_name.includes('.jpeg') || message.file_name.includes('.png') ? (\n          <>\n            {/* Render image with alt text and optional placeholder */}\n            <img\n              className='picturemess'\n              src={`${BASE_URL}tourschoolphp/${message.file_name}`}\n              alt=\"Attached Image\"\n              onError={(e) => e.target.src = 'path/to/placeholder.jpg'} // Optional placeholder\n            />\n            <img className='forw' src=\"./forward.svg\" alt=\"Forward Icon\" onClick={() => handleForwClick(message.file_name)} />\n          </>\n        ) : (\n          /* Handle non-image files */\n          <a\n            className='ahrew'\n            href={`${BASE_URL}tourschoolphp/${message.file_name}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span style={{ lineHeight: '60px' }}>{message.file_name.slice(4)}</span>\n          </a>\n        )}\n      </div>\n    )}\n \n \n    <span className=\"message-date\">\n      {formatMessageDate(message.created_at)}\n    </span>\n  </div>\n)}\n</div>\n          </div>\n        );\n      })}\n    </div>\n     \n            <div className='alltextandyellow'>\n              <div className='yellowbuttonchat2'>\n                <label htmlFor=\"fileInput\">\n                  <img src=\"./clip.svg\" alt=\"Attach File\" />\n                </label>\n                <input\n                  id=\"fileInput\"\n                  type=\"file\"\n                  accept=\".pdf, .doc, .docx, .jpg, .jpeg, .png\"\n                  onChange={(e) => handleFileChange(e.target.files)}\n                  style={{ display: 'none' }}\n                />\n              </div>\n  \n              {attachedFile && (\n                <div className=\"attached-file-info\">\n                  <span>{attachedFile.name}</span>\n                  <span>- {attachedFile.size} bytes</span>\n                </div>\n              )}\n  \n              <div className=\"chat-input\">\n                <textarea\n                  className=\"inin\"\n                  value={message}\n                  placeholder=\"Сообщение\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                />\n                <div className='yellowbuttonchat'>\n                <img src=\"./sendmessage.svg\" onClick={handleSendMessage} alt=\"Send Message\" />\n\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n   \n  \n\n   \n      {showUserModal && (\n  <div className=\"modal-overlay4\">\n    <div className=\"modal4\">\n      <div className={`rightchats2 ${showRightChats ? 'show' : ''}`}>\n        <button onClick={() => setShowUserModal(false)}>Отменить</button>\n        <div\n          className={`stuсdent-item ${selectAll ? 'selected' : ''}`}\n          onClick={() => handleStudentsClick({ id: 'selectAll' })}\n        >\n          <div className={`student-name2 ${selectAll ? 'selected-name' : ''}`}>\n            Выбрать всех\n          </div>\n        </div>\n\n        <div className={`rightchats-container ${selectedStudents.length > 0 ? 'selected' : ''}`}>\n          <div className='chatinfousers'>\n            {/* Остальные студенты */}\n            {students.map((student) => (\n              <div\n                key={student.id}\n                className={`student-item ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected' : ''}`}\n                onClick={() => handleStudentsClick(student)}\n              >\n                <div className={`avatarka ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected-avatar' : ''}`}></div>\n                <div className={`student-name ${selectedStudents.some((selectedStudent) => selectedStudent.id === student.id) ? 'selected-name' : ''}`}>\n                  {student.name} {student.surname}\n                  {unreadMessages[student.id] && <div className=\"notification-dot\"></div>}\n                </div>\n              </div>\n            ))}\n          </div>\n          {selectedStudents.length > 0 && (\n            <button className=\"send-button\" onClick={handleSendButtonClick}>\n              Отправить\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n\n    </div>\n\n    \n  );\n  \n};\n\nexport default ListStudents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}